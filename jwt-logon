#!/bin/sh

CURL=curl
PORT=443

CMDNAME=$(basename $0)

if [ -z $JWT_USER_PATH ]; then
  USER_ID=`id -u`
  DOWNLOAD_FOLDER=/tmp/jwt_user_u$USER_ID
  DOWNLOAD_PATH="${DOWNLOAD_FOLDER}/token.jwt"
else
  DOWNLOAD_PATH=$JWT_USER_PATH
fi
umask 077; mkdir -p `dirname $DOWNLOAD_PATH`
TMP_PATH=`dirname $DOWNLOAD_PATH`/token.tmp

if [ -n $JWT_SERVER_URL ]; then
  BASE_URL=$JWT_SERVER_URL
fi

if [ -n $LOGNAME ]; then
  ACCOUNT=$LOGNAME
fi

while getopts s:l:p: OPT
do
  case $OPT in
    "s" ) BASE_URL="$OPTARG" ;;
    "l" ) ACCOUNT="$OPTARG" ;;
    "p" ) PORT="$OPTARG" ;;
      * ) echo "Usage: $CMDNAME [-s URL] [-l USER]" 1>&2
          exit 1 ;;
  esac
done

if [ -z "$BASE_URL" -o -z "$ACCOUNT" ]; then
 echo "Usage: $CMDNAME [-s URL] [-l USER]" 1>&2
 exit 1
fi

if [ -t 0 ]; then
  echo -n "Passphrase: "
  trap "stty echo" HUP INT QUIT TERM
  stty -echo
  read PASS
  stty echo

  echo
else
  read PASS
fi

URL=$BASE_URL/jwt

COMMAND="$CURL -sS -m 10 -X POST -d user=$ACCOUNT -d pass=$PASS $URL"

JWT=`$COMMAND`
curl_ret=$?
#curl's exit status is 0 at authentication error

expr "$JWT" : '.*Error.*' > /dev/null
jwt_ret=$?

expr "$JWT" : '.*<html>.*' > /dev/null
jwt_ret2=$?

if [ $curl_ret -ne 0 ] || [ -z "$JWT" ] || [ $jwt_ret -eq 0 ] || [ $jwt_ret2 -eq 0 ]; then
#error
  if [ $jwt_ret2 -eq 0 ]; then
      echo $ACCOUNT":Invalid Server"
  elif [ $curl_ret -eq 0 ]; then
      echo $ACCOUNT":Authentication Error"
  fi
  exit 1
else
  umask 077; echo $JWT > $TMP_PATH
  mv $TMP_PATH $DOWNLOAD_PATH
  echo "Output JWT to "$DOWNLOAD_PATH
  exit 0
fi
